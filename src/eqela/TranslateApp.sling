
/*
 * This file is part of Eqela Tools
 * Copyright (c) 2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is ConsoleApplicationMain:

import capex.console

prop api as LiveService

func execute override as bool
{
	var file as File
	var from as string
	var to as string
	foreach arg in args {
		if arg.isParameter() {
			file = File.forPath(arg.parameter)
		}
		else if arg.isOption("from") {
			from = arg.getStringValue()
		}
		else if arg.isOption("to") {
			to = arg.getStringValue()
		}
		else {
			arg.reportAsUnsupported(ctx)
			return false
		}
	}
	assert file:
		Log.error(ctx, "No file specified.")
	assert String.isNotEmpty(from):
		Log.error(ctx, "Source language was not supplied. Use -from=...")
	assert String.isNotEmpty(to):
		Log.error(ctx, "Target language was not supplied. Use -to=...")
	var data = assert file.getContentsUTF8():
		Log.error(ctx, "Failed to read file: `" .. file.getPath() .. "'")
	Log.status(ctx, "Translating `" .. file.getPath() .. "' .. ")
	var v = false
	api.translateFile(data, from, to, func(result as string) {
		Log.status(ctx, null)
		if not result {
			Log.error(ctx, String.asString(api.getLastError()))
		}
		else {
			print(result)
			v = true
		}
	})
	return v
}
