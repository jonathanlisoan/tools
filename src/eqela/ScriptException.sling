
/*
 * This file is part of Eqela Tools
 * Copyright (c) 2018 Job and Esther Technologies Oy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is Exception is StringObject:

func forError(source as SourceReference, error as string) static as this
{
	var v = new this()
	v.setSource(source)
	v.setError(error)
	return v
}

prop source as SourceReference
prop error as string

func toString as string
{
	var sb = new StringBuilder()
	if source {
		var file = source.getFile()
		if file:
			sb.append(file.getPath())
		var line = source.getLine()
		if line > 0 {
			sb.append(':')
			sb.append(String.forInteger(line))
		}
		sb.append(": ")
	}
	if error:
		sb.append(error)
	if source {
		var lines = source.getLineContent()
		if lines {
			sb.append("\n\t")
			sb.append(lines)
			sb.append("\n\t^")
		}
	}
	return sb.toString()
}
